{"version":3,"sources":["LotteryApp/Ball.js","LotteryApp/Lottery.js","App.js","serviceWorker.js","index.js"],"names":["Ball","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","percentChange","percentChange10","percentChange5","percentChange2","numbers15","numbers10","numbers5","numbers2","numbersPost","perChangeCss","calledFifteenTo10","calledTenTo5","calledFiveTo2","calledTwoToPost","bind","assertThisInitialized","rowNumber","percentChangeInc","fifteenToTen","tenToFive","fiveToTwo","twoToPost","console","log","prevProps","tenMinNum","fiveMinNum","twoMinNum","postNum","undefined","setState","oldNum","newNum","currentTotalNum","nextRaceHorses","id","temp","Math","ceil","fifteenMinNum","parseInt","perChange","perChangeIn10","newPerChange10","newPerChange","perChangeIn5","newPerChange5","perChangeIn2","newPerChange2","perChangeInPost","newPerChangePost","react_default","a","createElement","className","round","Component","Lottery","currentRace","auto","fiveMinNums","fiveMin","tenMinNums","tenMin","fifteenMinNums","fifteenMin","twoMinNums","twoMin","postNums","postMin","totalHorsesCurrent","handleClick","handleRaceNumChange","handleNumChange2Min","twoMinHandleSplit","handleNumChange5Min","fiveMinHandleSplit","handleNumChange10Min","tenMinHandleSplit","handleNumChange15Min","fifteenMinHandleSplit","handleNumChangePost","postHandleSplit","num","claass","i","inputCurrent","event","target","value","str","box1Split","split","remove","shift","length","includes","numm","replace","total","_this2","divStyle","gridTemplateColumns","type","onChange","onClick","style","map","n","index","src_LotteryApp_Ball","key","App","src_LotteryApp_Lottery","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2093f8f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Ball.css\";\n\nclass Ball extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      percentChange: 0,\n      percentChange10: 0,\n      percentChange5: 0,\n      percentChange2: 0,\n      numbers15: \"numbers15\",\n      numbers10: \"numbers10\",\n      numbers5: \"numbers5\",\n      numbers2: \"numbers2\",\n      numbersPost: \"numbersPost\",\n      perChangeCss: \"perChange\",\n      calledFifteenTo10: false,\n      calledTenTo5: false,\n      calledFiveTo2: false,\n      calledTwoToPost: false,\n    };\n    this.percentChange = this.percentChange.bind(this);\n    this.rowNumber = this.rowNumber.bind(this);\n    this.percentChangeInc = this.percentChangeInc.bind(this);\n    this.fifteenToTen = this.fifteenToTen.bind(this);\n    this.tenToFive = this.tenToFive.bind(this);\n    this.fiveToTwo = this.fiveToTwo.bind(this);\n    this.twoToPost = this.twoToPost.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"this.fifteenToTen() component did mount\");\n  }\n\n  componentDidUpdate(prevProps) {\n    //let fifteenMinNum = this.props.fifteenMinNum;\n    let tenMinNum = this.props.tenMinNum;\n    let fiveMinNum = this.props.fiveMinNum;\n    let twoMinNum = this.props.twoMinNum;\n    let postNum = this.props.postNum;\n    console.log(\"PREV \" + prevProps.tenMinNum);\n    console.log(\"CUR \" + tenMinNum);\n    if (tenMinNum !== undefined && this.state.calledFifteenTo10 === false) {\n      this.fifteenToTen();\n      this.setState({ calledFifteenTo10: true });\n    } else if (\n      prevProps.tenMinNum !== tenMinNum &&\n      this.state.calledFifteenTo10 === true\n    ) {\n      this.fifteenToTen();\n      this.twoToPost();\n    }\n    if (fiveMinNum !== undefined && this.state.calledTenTo5 === false) {\n      this.tenToFive();\n      this.setState({ calledTenTo5: true });\n    } else if (\n      prevProps.fiveMinNum !== fiveMinNum &&\n      this.state.calledTenTo5 === true\n    ) {\n      this.tenToFive();\n      this.twoToPost();\n    }\n    if (twoMinNum !== undefined && this.state.calledFiveTo2 === false) {\n      this.fiveToTwo();\n      this.setState({ calledFiveTo2: true });\n    } else if (\n      prevProps.twoMinNum !== twoMinNum &&\n      this.state.calledFiveTo2 === true\n    ) {\n      this.fiveToTwo();\n      this.twoToPost();\n    }\n    if (postNum !== undefined && this.state.calledTwoToPost === false) {\n      this.twoToPost();\n      this.setState({ calledTwoToPost: true });\n    } else if (\n      prevProps.postNum !== postNum &&\n      this.state.calledTwoToPost === true\n    ) {\n      this.twoToPost();\n    }\n  }\n\n  percentChange(oldNum, newNum) {\n    let minus = oldNum - newNum;\n    let divide = minus / oldNum;\n    let answer = divide * 100;\n    return answer;\n  }\n  percentChangeInc(newNum, oldNum) {\n    let minus = newNum - oldNum;\n    let divide = minus / oldNum;\n    let answer = divide * 100;\n    return answer;\n  }\n  // associates rows (this race)\n  rowNumber(currentTotalNum, nextRaceHorses, id) {\n    let numRows = currentTotalNum / nextRaceHorses;\n    let numColumns = currentTotalNum / numRows;\n    let temp = id / numColumns;\n    let curHorse = Math.ceil(temp);\n    return curHorse;\n  }\n\n  //this.rowNumber(totalHorsesCurrent, currentRace, id);\n  fifteenToTen() {\n    console.log(\" in Fifteen to ten\");\n    let fifteenMinNum = this.props.fifteenMinNum;\n    let tenMinNum = this.props.tenMinNum;\n    let numbers10;\n    if (parseInt(fifteenMinNum) > parseInt(tenMinNum)) {\n      let perChange = this.percentChange(\n        parseInt(fifteenMinNum),\n        parseInt(tenMinNum)\n      );\n      if (perChange > 23.0) {\n        numbers10 = \"numbers10BigHit\";\n        this.setState({ numbers10: numbers10 });\n      } else {\n        numbers10 = \"numbers10Hit\";\n        this.setState({ numbers10: numbers10 });\n      }\n      this.setState({ percentChange: perChange });\n    } else if (parseInt(fifteenMinNum) <= parseInt(tenMinNum)) {\n      let perChangeIn10 = this.percentChangeInc(\n        parseInt(tenMinNum),\n        parseInt(fifteenMinNum)\n      );\n      let newPerChange10 = this.state.percentChange - perChangeIn10;\n      this.setState({ percentChange: newPerChange10 });\n    }\n    //this.tenToFive();\n  }\n\n  tenToFive() {\n    console.log(\"in ten to 5\");\n    let fiveMinNum = this.props.fiveMinNum;\n    let tenMinNum = this.props.tenMinNum;\n    let numbers5;\n    if (parseInt(tenMinNum) > parseInt(fiveMinNum)) {\n      let perChange = this.percentChange(\n        parseInt(tenMinNum),\n        parseInt(fiveMinNum)\n      );\n      let newPerChange = this.state.percentChange + perChange;\n      if (perChange > 23.0) {\n        numbers5 = \"numbers5BigHit\";\n        this.setState({ numbers5: numbers5 });\n      } else {\n        numbers5 = \"numbers5Hit\";\n        this.setState({ numbers5: numbers5 });\n      }\n      this.setState({ percentChange10: newPerChange });\n    } else if (parseInt(tenMinNum) <= parseInt(fiveMinNum)) {\n      let perChangeIn5 = this.percentChangeInc(\n        parseInt(fiveMinNum),\n        parseInt(tenMinNum)\n      );\n      let newPerChange5 = this.state.percentChange - perChangeIn5;\n      this.setState({ percentChange10: newPerChange5 });\n    }\n    // this.fiveToTwo();\n  }\n\n  fiveToTwo() {\n    let fiveMinNum = this.props.fiveMinNum;\n    let twoMinNum = this.props.twoMinNum;\n    let numbers2;\n    if (parseInt(fiveMinNum) > parseInt(twoMinNum)) {\n      let perChange = this.percentChange(\n        parseInt(fiveMinNum),\n        parseInt(twoMinNum)\n      );\n      let newPerChange = this.state.percentChange10 + perChange;\n\n      if (perChange > 23.0) {\n        numbers2 = \"numbers2BigHit\";\n        this.setState({ numbers2: numbers2 });\n      } else {\n        numbers2 = \"numbers2Hit\";\n        this.setState({ numbers2: numbers2 });\n      }\n      this.setState({ percentChange5: newPerChange });\n    } else if (parseInt(fiveMinNum) <= parseInt(twoMinNum)) {\n      let perChangeIn2 = this.percentChangeInc(\n        parseInt(twoMinNum),\n        parseInt(fiveMinNum)\n      );\n      let newPerChange2 = this.state.percentChange10 - perChangeIn2;\n      this.setState({ percentChange5: newPerChange2 });\n    }\n  }\n\n  twoToPost() {\n    let postNum = this.props.postNum;\n    let twoMinNum = this.props.twoMinNum;\n    let numbersPost;\n    let newPerChangeCss;\n    if (parseInt(twoMinNum) > parseInt(postNum)) {\n      let perChange = this.percentChange(\n        parseInt(twoMinNum),\n        parseInt(postNum)\n      );\n      let newPerChange = this.state.percentChange5 + perChange;\n      if (perChange > 23.0) {\n        numbersPost = \"numbersPostBigHit\";\n        this.setState({ numbersPost: numbersPost });\n      } else {\n        numbersPost = \"numbersPostHit\";\n        this.setState({ numbersPost: numbersPost });\n      }\n      this.setState({ percentChange2: newPerChange });\n      if (newPerChange > 5) {\n        newPerChangeCss = \"perChangeHit\";\n        this.setState({ perChangeCss: newPerChangeCss });\n      }\n    } else if (parseInt(twoMinNum) <= parseInt(postNum)) {\n      let perChangeInPost = this.percentChangeInc(\n        parseInt(postNum),\n        parseInt(twoMinNum)\n      );\n      let newPerChangePost = this.state.percentChange5 - perChangeInPost;\n      this.setState({ percentChange2: newPerChangePost });\n    }\n  }\n\n  render() {\n    // let { totalHorsesCurrent } = this.props;\n    // let { currentRace } = this.props;\n    // let { id } = this.props;\n    let { fiveMinNum } = this.props;\n    let { twoMinNum } = this.props;\n    let { tenMinNum } = this.props;\n    let { fifteenMinNum } = this.props;\n    let { postNum } = this.props;\n    let List = \"List\";\n\n    return (\n      <div className=\"grid-item\">\n        <ul className={List}>\n          <li className={this.state.numbers15}> {fifteenMinNum}</li>\n          <li className={this.state.numbers10}> {tenMinNum}</li>\n          <li className={this.state.numbers5}> {fiveMinNum}</li>\n          <li className={this.state.numbers2}> {twoMinNum}</li>\n          <li className={this.state.numbersPost}> {postNum}</li>\n        </ul>\n\n        <p className={this.state.perChangeCss}>\n          Total PC: {Math.round(100 * this.state.percentChange2) / 100}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Ball;\n","import React, { Component } from \"react\";\nimport Ball from \"./Ball\";\nimport \"./Lottery.css\";\n//import UTILS from \"./utils\";\n\nclass Lottery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //numbers: UTILS,\n      currentRace: 0,\n      auto: \"\",\n      fiveMinNums: [],\n      fiveMin: \"\",\n      tenMinNums: [],\n      tenMin: \"\",\n      fifteenMinNums: [],\n      fifteenMin: \"\",\n      twoMinNums: [],\n      twoMin: \"\",\n      postNums: [],\n      postMin: \"\",\n      totalHorsesCurrent: 0,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleRaceNumChange = this.handleRaceNumChange.bind(this);\n    this.handleNumChange2Min = this.handleNumChange2Min.bind(this);\n    this.twoMinHandleSplit = this.twoMinHandleSplit.bind(this);\n    this.handleNumChange5Min = this.handleNumChange5Min.bind(this);\n    this.fiveMinHandleSplit = this.fiveMinHandleSplit.bind(this);\n    this.handleNumChange10Min = this.handleNumChange10Min.bind(this);\n    this.tenMinHandleSplit = this.tenMinHandleSplit.bind(this);\n    this.handleNumChange15Min = this.handleNumChange15Min.bind(this);\n    this.fifteenMinHandleSplit = this.fifteenMinHandleSplit.bind(this);\n    this.handleNumChangePost = this.handleNumChangePost.bind(this);\n    this.postHandleSplit = this.postHandleSplit.bind(this);\n  }\n\n  inputCurrent(num) {\n    let claass = \"\";\n    for (let i = 0; i < num; i++) {\n      claass += \"auto \";\n    }\n    this.setState({ auto: claass });\n  }\n  handleClick() {\n    this.inputCurrent(this.state.currentRace);\n    this.fifteenMinHandleSplit(this.state.fifteenMin);\n    this.tenMinHandleSplit(this.state.tenMin);\n    this.fiveMinHandleSplit(this.state.fiveMin);\n    this.twoMinHandleSplit(this.state.twoMin);\n    this.postHandleSplit(this.state.postMin);\n  }\n\n  handleRaceNumChange(event) {\n    this.setState({ currentRace: event.target.value });\n  }\n  // 2 MIN OUT\n  handleNumChange2Min(event) {\n    this.setState({ twoMin: event.target.value });\n  }\n  twoMinHandleSplit(str) {\n    let box1Split = str.split(\"$\");\n    let remove = box1Split.shift();\n    console.log(remove);\n    for (let i = 0; i < box1Split.length; i++) {\n      if (box1Split[i].includes(\",\")) {\n        let numm = box1Split[i].replace(\",\", \" \");\n        numm = numm.replace(/\\s/g, \"\");\n        box1Split[i] = numm;\n      }\n    }\n    this.setState({ twoMinNums: box1Split });\n  }\n  // 5 MIN OUT\n  handleNumChange5Min(event) {\n    this.setState({ fiveMin: event.target.value });\n  }\n  fiveMinHandleSplit(str) {\n    let box1Split = str.split(\"$\");\n    let remove = box1Split.shift();\n    console.log(remove);\n    for (let i = 0; i < box1Split.length; i++) {\n      if (box1Split[i].includes(\",\")) {\n        let numm = box1Split[i].replace(\",\", \" \");\n        numm = numm.replace(/\\s/g, \"\");\n        box1Split[i] = numm;\n      }\n    }\n    this.setState({ fiveMinNums: box1Split });\n  }\n  // 10 MIN OUT\n  handleNumChange10Min(event) {\n    this.setState({ tenMin: event.target.value });\n  }\n  tenMinHandleSplit(str) {\n    let box1Split = str.split(\"$\");\n    let remove = box1Split.shift();\n    console.log(remove);\n    for (let i = 0; i < box1Split.length; i++) {\n      if (box1Split[i].includes(\",\")) {\n        let numm = box1Split[i].replace(\",\", \" \");\n        numm = numm.replace(/\\s/g, \"\");\n        box1Split[i] = numm;\n      }\n    }\n    this.setState({ tenMinNums: box1Split });\n  }\n  // 15 MIN OUT\n  handleNumChange15Min(event) {\n    this.setState({ fifteenMin: event.target.value });\n  }\n  // 15 Handle Split;\n  fifteenMinHandleSplit(str) {\n    let box1Split = str.split(\"$\");\n    let remove = box1Split.shift();\n    console.log(remove);\n    let total = box1Split.length;\n    this.setState({ totalHorsesCurrent: total });\n    //console.log(total);\n    for (let i = 0; i < box1Split.length; i++) {\n      if (box1Split[i].includes(\",\")) {\n        let numm = box1Split[i].replace(\",\", \" \");\n        numm = numm.replace(/\\s/g, \"\");\n        box1Split[i] = numm;\n      }\n    }\n    this.setState({ fifteenMinNums: box1Split });\n  }\n  // POST TIME\n  handleNumChangePost(event) {\n    this.setState({ postMin: event.target.value });\n  }\n  postHandleSplit(str) {\n    let box1Split = str.split(\"$\");\n    let remove = box1Split.shift();\n    console.log(remove);\n    for (let i = 0; i < box1Split.length; i++) {\n      if (box1Split[i].includes(\",\")) {\n        let numm = box1Split[i].replace(\",\", \" \");\n        numm = numm.replace(/\\s/g, \"\");\n        box1Split[i] = numm;\n      }\n    }\n    this.setState({ postNums: box1Split });\n  }\n\n  // DONT ADD CODE BELOW THIS\n  render() {\n    const divStyle = {\n      gridTemplateColumns: this.state.auto,\n    };\n\n    return (\n      <div>\n        <h1>CHARTING APP</h1>\n        <label>15 Min</label>\n        <input\n          type=\"text\"\n          id=\"box1\"\n          value={this.state.value}\n          onChange={this.handleNumChange15Min}\n        />\n        <label>10 Min</label>\n        <input\n          type=\"text\"\n          id=\"box1\"\n          value={this.state.value}\n          onChange={this.handleNumChange10Min}\n        />\n        <label>5 Min</label>\n        <input\n          type=\"text\"\n          id=\"box1\"\n          value={this.state.value}\n          onChange={this.handleNumChange5Min}\n        />\n        <label>2 Min</label>\n        <input\n          type=\"text\"\n          id=\"box1\"\n          value={this.state.value}\n          onChange={this.handleNumChange2Min}\n        />\n        <label>POST TIME</label>\n        <input\n          type=\"text\"\n          id=\"box1\"\n          value={this.state.value}\n          onChange={this.handleNumChangePost}\n        />\n\n        <label>Horses in NEXT race</label>\n        <input\n          type=\"number\"\n          value={this.state.value}\n          onChange={this.handleRaceNumChange}\n        />\n        <button className=\"btn\" onClick={this.handleClick}>\n          Generate\n        </button>\n\n        <div style={divStyle} className=\"grid-container\">\n          {this.state.fifteenMinNums.map((n, index) => (\n            <Ball\n              //num={n}\n              totalHorsesCurrent={this.state.totalHorsesCurrent}\n              currentRace={this.state.currentRace}\n              key={index}\n              id={index + 1}\n              fiveMinNum={this.state.fiveMinNums[index]}\n              twoMinNum={this.state.twoMinNums[index]}\n              tenMinNum={this.state.tenMinNums[index]}\n              fifteenMinNum={n}\n              postNum={this.state.postNums[index]}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lottery;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n//import GithubUserInfo from \"./LifeCycleMethods/GithubUserInfo\";\nimport Lottery from \"./LotteryApp/Lottery\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        {/* <GithubUserInfo username=\"JordanMichele\" /> */}\n        <Lottery />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}