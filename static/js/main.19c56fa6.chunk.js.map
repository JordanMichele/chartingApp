{"version":3,"sources":["LotteryApp/Ball.js","LotteryApp/Lottery.js","App.js","serviceWorker.js","index.js"],"names":["Ball","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","percentChange10","percentChange5","percentChange2","percentChange","numbers15","numbers10","numbers5","numbers2","numbersPost","perChangeCss1","perChangeCss2","perChangeCss3","perChangeCss4","calledFifteenTo10","calledTenTo5","calledFiveTo2","calledTwoToPost","addNewState","avgNewState","addBrandNewState","avgBrandNewState","bind","assertThisInitialized","rowNumber","percentChangeInc","fifteenToTen","tenToFive","fiveToTwo","twoToPost","main","percentChangeOverall","console","log","prevProps","tenMinNum","fiveMinNum","twoMinNum","postNum","undefined","setState","fifteenMinNum","addNews","avgNews","addBrandNews","avgBrandNews","oldNum","newNum","currentTotalNum","nextRaceHorses","id","temp","Math","ceil","parseInt","perChange","perChangeIn10","newPerChange10","perChangeIn5","newPerChange5","perChangeIn2","newPerChange2","perChangeInPost","newPerChangePost","react_default","a","createElement","className","Component","Lottery","horsesThisRace","horsesNextRace","columns","rows","auto","rowNums","fiveMinNums","fiveMin","tenMinNums","tenMin","fifteenMinNums","fifteenMin","twoMinNums","twoMin","postNums","postMin","totalHorsesCurrent","summedTotals","handleClick","handleRaceNumChange","handleCurHorseNum","handleNumChange2Min","twoMinHandleSplit","handleNumChange5Min","fiveMinHandleSplit","handleNumChange10Min","tenMinHandleSplit","handleNumChange15Min","fifteenMinHandleSplit","handleNumChangePost","postHandleSplit","totalPercentChange","percentChangeRow","postMinNum","addedNumbers","i","length","newFirst","newSecond","newThird","newForth","perChange2","perChange3","perChange4","totalSum","push","answer","arr","addedRows","curHorse","newArr","values","map","n","num","claass","inputNext","inputCurrent","handleColumnNums","handleRowNums","event","target","value","str","box1Split","split","remove","shift","includes","numm","replace","total","_this2","divStyleColumns","gridTemplateColumns","divStyleRows","type","onChange","onClick","style","index","key","src_LotteryApp_Ball","currentRace","round","App","src_LotteryApp_Lottery","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19c56fa6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Ball.css\";\n\nclass Ball extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      percentChange10: 0,\n      percentChange5: 0,\n      percentChange2: 0,\n      percentChange: 0,\n      numbers15: \"numbers15\",\n      numbers10: \"numbers10\",\n      numbers5: \"numbers5\",\n      numbers2: \"numbers2\",\n      numbersPost: \"numbersPost\",\n      perChangeCss1: \"perChange\",\n      perChangeCss2: \"perChange\",\n      perChangeCss3: \"perChange\",\n      perChangeCss4: \"perChange\",\n      calledFifteenTo10: false,\n      calledTenTo5: false,\n      calledFiveTo2: false,\n      calledTwoToPost: false,\n      addNewState: 0,\n      avgNewState: 0,\n      addBrandNewState: 0,\n      avgBrandNewState: 0,\n    };\n    this.percentChange = this.percentChange.bind(this);\n    this.rowNumber = this.rowNumber.bind(this);\n    this.percentChangeInc = this.percentChangeInc.bind(this);\n    this.fifteenToTen = this.fifteenToTen.bind(this);\n    this.tenToFive = this.tenToFive.bind(this);\n    this.fiveToTwo = this.fiveToTwo.bind(this);\n    this.twoToPost = this.twoToPost.bind(this);\n    this.main = this.main.bind(this);\n    this.percentChangeOverall = this.percentChangeOverall.bind(this);\n  }\n\n  main() {\n    this.fifteenToTen();\n    this.tenToFive();\n    this.fiveToTwo();\n    this.twoToPost();\n  }\n\n  componentDidMount() {\n    console.log(\"this.fifteenToTen() component did mount\");\n  }\n\n  componentDidUpdate(prevProps) {\n    let tenMinNum = this.props.tenMinNum;\n    let fiveMinNum = this.props.fiveMinNum;\n    let twoMinNum = this.props.twoMinNum;\n    let postNum = this.props.postNum;\n    if (tenMinNum !== undefined && this.state.calledFifteenTo10 === false) {\n      this.fifteenToTen();\n      this.setState({ calledFifteenTo10: true });\n    } else if (\n      prevProps.tenMinNum !== tenMinNum &&\n      this.state.calledFifteenTo10 === true\n    ) {\n      this.main();\n    }\n    if (fiveMinNum !== undefined && this.state.calledTenTo5 === false) {\n      this.tenToFive();\n      this.setState({ calledTenTo5: true });\n    } else if (\n      prevProps.fiveMinNum !== fiveMinNum &&\n      this.state.calledTenTo5 === true\n    ) {\n      this.main();\n    }\n    if (twoMinNum !== undefined && this.state.calledFiveTo2 === false) {\n      this.fiveToTwo();\n      this.setState({ calledFiveTo2: true });\n    } else if (\n      prevProps.twoMinNum !== twoMinNum &&\n      this.state.calledFiveTo2 === true\n    ) {\n      this.main();\n    }\n    if (postNum !== undefined && this.state.calledTwoToPost === false) {\n      this.twoToPost();\n      this.setState({ calledTwoToPost: true });\n    } else if (\n      prevProps.postNum !== postNum &&\n      this.state.calledTwoToPost === true\n    ) {\n      this.main();\n    }\n  }\n\n  percentChangeOverall() {\n    let { fifteenMinNum } = this.props;\n    let { tenMinNum } = this.props;\n    let { fiveMinNum } = this.props;\n    let { twoMinNum } = this.props;\n    let { postNum } = this.props;\n    let perChangeFirst = this.percentChange(fifteenMinNum, tenMinNum);\n    let perChangeSecond = this.percentChange(tenMinNum, fiveMinNum);\n    let perChangeThird = this.percentChange(fiveMinNum, twoMinNum);\n    let perChangeForth = this.percentChange(twoMinNum, postNum);\n    // Weighed Averages\n    let newFirst = perChangeFirst * 0.1;\n    let newSecond = perChangeSecond * 0.15;\n    let newThird = perChangeThird * 0.3;\n    let newForth = perChangeForth * 0.45;\n    // Summed\n    let addNews = newFirst + newSecond + newThird + newForth;\n    this.setState({ addNewState: addNews });\n    // AVG Weighed\n    let avgNews = addNews / 4;\n    this.setState({ avgNewState: avgNews });\n    // PER change from 1st Number\n    let perChange1 = this.percentChange(fifteenMinNum, tenMinNum);\n    let perChange2 = this.percentChange(fifteenMinNum, fiveMinNum);\n    let perChange3 = this.percentChange(fifteenMinNum, twoMinNum);\n    let perChange4 = this.percentChange(fifteenMinNum, postNum);\n    let newFirst1 = perChange1 * 0.1;\n    let newSecond2 = perChange2 * 0.15;\n    let newThird3 = perChange3 * 0.3;\n    let newForth4 = perChange4 * 0.45;\n    // Summed PER Change from FIRST input\n    let addBrandNews = newFirst1 + newSecond2 + newThird3 + newForth4;\n    this.setState({ addBrandNewState: addBrandNews });\n    // Average of the SUMS\n    let avgBrandNews = addBrandNews / 4;\n    this.setState({ avgBrandNewState: avgBrandNews });\n    // SET the CSS based on positive or negative\n    if (addNews > 9) {\n      let newPerChangeCss1 = \"perChangeHit\";\n      this.setState({ perChangeCss1: newPerChangeCss1 });\n    } else {\n      let regular = \"perChange\";\n      this.setState({ perChangeCss1: regular });\n    }\n    if (avgNews > 9) {\n      let newPerChangeCss2 = \"perChangeHit\";\n      this.setState({ perChangeCss2: newPerChangeCss2 });\n    } else {\n      let regular = \"perChange\";\n      this.setState({ perChangeCss2: regular });\n    }\n    if (addBrandNews > 9) {\n      let newPerChangeCss3 = \"perChangeHit\";\n      this.setState({ perChangeCss3: newPerChangeCss3 });\n    } else {\n      let regular = \"perChange\";\n      this.setState({ perChangeCss3: regular });\n    }\n    if (avgBrandNews > 9) {\n      let newPerChangeCss4 = \"perChangeHit\";\n      this.setState({ perChangeCss4: newPerChangeCss4 });\n    } else {\n      let regular = \"perChange\";\n      this.setState({ perChangeCss4: regular });\n    }\n  }\n\n  percentChange(oldNum, newNum) {\n    let minus = oldNum - newNum;\n    let divide = minus / oldNum;\n    let answer = divide * 100;\n    return answer;\n  }\n  percentChangeInc(newNum, oldNum) {\n    let minus = newNum - oldNum;\n    let divide = minus / oldNum;\n    let answer = divide * 100;\n    return answer;\n  }\n  // associates rows (this race)\n  rowNumber(currentTotalNum, nextRaceHorses, id) {\n    let numRows = currentTotalNum / nextRaceHorses;\n    let numColumns = currentTotalNum / numRows;\n    let temp = id / numColumns;\n    let curHorse = Math.ceil(temp);\n    return curHorse;\n  }\n\n  //this.rowNumber(totalHorsesCurrent, currentRace, id);\n  // 15 --> 10\n  fifteenToTen() {\n    let fifteenMinNum = this.props.fifteenMinNum;\n    let tenMinNum = this.props.tenMinNum;\n    let numbers10;\n    if (parseInt(fifteenMinNum) > parseInt(tenMinNum)) {\n      let perChange = this.percentChange(\n        parseInt(fifteenMinNum),\n        parseInt(tenMinNum)\n      );\n\n      if (perChange > 23.0) {\n        numbers10 = \"numbers10BigHit\";\n        this.setState({ numbers10: numbers10 });\n      } else {\n        numbers10 = \"numbers10Hit\";\n        this.setState({ numbers10: numbers10 });\n      }\n      this.setState({ percentChange: perChange });\n    } else if (parseInt(fifteenMinNum) <= parseInt(tenMinNum)) {\n      let perChangeIn10 = this.percentChangeInc(\n        parseInt(tenMinNum),\n        parseInt(fifteenMinNum)\n      );\n      this.setState({ numbers10: \"numbers10\" });\n      let newPerChange10 = this.state.percentChange - perChangeIn10;\n      this.setState({ percentChange: newPerChange10 });\n    }\n  }\n  // 10 --> 5\n  tenToFive() {\n    let fiveMinNum = this.props.fiveMinNum;\n    let tenMinNum = this.props.tenMinNum;\n    let numbers5;\n    if (parseInt(tenMinNum) > parseInt(fiveMinNum)) {\n      let perChange = this.percentChange(\n        parseInt(tenMinNum),\n        parseInt(fiveMinNum)\n      );\n      //let newPerChange = this.state.percentChange + perChange;\n      if (perChange > 23.0) {\n        numbers5 = \"numbers5BigHit\";\n        this.setState({ numbers5: numbers5 });\n      } else {\n        numbers5 = \"numbers5Hit\";\n        this.setState({ numbers5: numbers5 });\n      }\n      this.setState({ percentChange10: perChange });\n    } else if (parseInt(tenMinNum) <= parseInt(fiveMinNum)) {\n      let perChangeIn5 = this.percentChangeInc(\n        parseInt(fiveMinNum),\n        parseInt(tenMinNum)\n      );\n      this.setState({ numbers5: \"numbers5\" });\n      let newPerChange5 = this.state.percentChange10 - perChangeIn5;\n      this.setState({ percentChange10: newPerChange5 });\n    }\n  }\n  // 5 --> 2\n  fiveToTwo() {\n    let fiveMinNum = this.props.fiveMinNum;\n    let twoMinNum = this.props.twoMinNum;\n    let numbers2;\n    if (parseInt(fiveMinNum) > parseInt(twoMinNum)) {\n      let perChange = this.percentChange(\n        parseInt(fiveMinNum),\n        parseInt(twoMinNum)\n      );\n      //let newPerChange = this.state.percentChange10 + perChange;\n\n      if (perChange > 23.0) {\n        numbers2 = \"numbers2BigHit\";\n        this.setState({ numbers2: numbers2 });\n      } else {\n        numbers2 = \"numbers2Hit\";\n        this.setState({ numbers2: numbers2 });\n      }\n      this.setState({ percentChange5: perChange });\n    } else if (parseInt(fiveMinNum) <= parseInt(twoMinNum)) {\n      let perChangeIn2 = this.percentChangeInc(\n        parseInt(twoMinNum),\n        parseInt(fiveMinNum)\n      );\n      this.setState({ numbers2: \"numbers2\" });\n      let newPerChange2 = this.state.percentChange5 - perChangeIn2;\n      this.setState({ percentChange5: newPerChange2 });\n    }\n  }\n  // 2 --> POST\n  twoToPost() {\n    let postNum = this.props.postNum;\n    let twoMinNum = this.props.twoMinNum;\n    let numbersPost;\n    // let newPerChangeCss;\n    if (parseInt(twoMinNum) > parseInt(postNum)) {\n      let perChange = this.percentChange(\n        parseInt(twoMinNum),\n        parseInt(postNum)\n      );\n      // let newPerChange = this.state.percentChange5 + perChange;\n      if (perChange > 23.0) {\n        numbersPost = \"numbersPostBigHit\";\n        this.setState({ numbersPost: numbersPost });\n      } else {\n        numbersPost = \"numbersPostHit\";\n        this.setState({ numbersPost: numbersPost });\n      }\n      this.setState({ percentChange2: perChange });\n    } else if (parseInt(twoMinNum) <= parseInt(postNum)) {\n      let perChangeInPost = this.percentChangeInc(\n        parseInt(postNum),\n        parseInt(twoMinNum)\n      );\n      this.setState({ numbersPost: \"numbersPost\" });\n      let newPerChangePost = this.state.percentChange2 - perChangeInPost;\n      this.setState({ percentChange2: newPerChangePost });\n    }\n\n    // setTimeout(() => {\n    //   this.percentChangeOverall();\n    // }, 1000);\n  }\n\n  render() {\n    // let { totalHorsesCurrent } = this.props;\n    // let { currentRace } = this.props;\n    // let { id } = this.props;\n    let { fiveMinNum } = this.props;\n    let { twoMinNum } = this.props;\n    let { tenMinNum } = this.props;\n    let { fifteenMinNum } = this.props;\n    let { postNum } = this.props;\n    let List = \"List\";\n\n    return (\n      <div className=\"grid-item\">\n        <ul className={List}>\n          <li className={this.state.numbers15}> {fifteenMinNum}</li>\n          <li className={this.state.numbers10}> {tenMinNum}</li>\n          <li className={this.state.numbers5}> {fiveMinNum}</li>\n          <li className={this.state.numbers2}> {twoMinNum}</li>\n          <li className={this.state.numbersPost}> {postNum}</li>\n        </ul>\n\n        {/* <ul className={List}>\n          <li className={this.state.perChangeCss3}>\n            SUM W/ 1st: {Math.round(10 * this.state.addBrandNewState) / 10}\n          </li>\n          <li className={this.state.perChangeCss1}>\n            SUM PC: {Math.round(10 * this.state.addNewState) / 10}\n          </li>\n          <li className={this.state.perChangeCss4}>\n            AVG W/ 1st: {Math.round(10 * this.state.avgBrandNewState) / 10}\n          </li>\n          <li className={this.state.perChangeCss2}>\n            AVG PC: {Math.round(10 * this.state.avgNewState) / 10}\n          </li>\n        </ul> */}\n      </div>\n    );\n  }\n}\n\nexport default Ball;\n","import React, { Component } from \"react\";\nimport Ball from \"./Ball\";\nimport \"./Lottery.css\";\n//import UTILS from \"./utils\";\n\nclass Lottery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      horsesThisRace: 0,\n      horsesNextRace: 0,\n      columns: [],\n      rows: [],\n      auto: \"\",\n      rowNums: \"\",\n      fiveMinNums: [],\n      fiveMin: \"\",\n      tenMinNums: [],\n      tenMin: \"\",\n      fifteenMinNums: [],\n      fifteenMin: \"\",\n      twoMinNums: [],\n      twoMin: \"\",\n      postNums: [],\n      postMin: \"\",\n      totalHorsesCurrent: 0,\n      summedTotals: [],\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleRaceNumChange = this.handleRaceNumChange.bind(this);\n    this.handleCurHorseNum = this.handleCurHorseNum.bind(this);\n    this.handleNumChange2Min = this.handleNumChange2Min.bind(this);\n    this.twoMinHandleSplit = this.twoMinHandleSplit.bind(this);\n    this.handleNumChange5Min = this.handleNumChange5Min.bind(this);\n    this.fiveMinHandleSplit = this.fiveMinHandleSplit.bind(this);\n    this.handleNumChange10Min = this.handleNumChange10Min.bind(this);\n    this.tenMinHandleSplit = this.tenMinHandleSplit.bind(this);\n    this.handleNumChange15Min = this.handleNumChange15Min.bind(this);\n    this.fifteenMinHandleSplit = this.fifteenMinHandleSplit.bind(this);\n    this.handleNumChangePost = this.handleNumChangePost.bind(this);\n    this.postHandleSplit = this.postHandleSplit.bind(this);\n    this.totalPercentChange = this.totalPercentChange.bind(this);\n    this.percentChangeRow = this.percentChangeRow.bind(this);\n    this.percentChange = this.percentChange.bind(this);\n    this.percentChangeInc = this.percentChangeInc.bind(this);\n    this.rowNumber = this.rowNumber.bind(this);\n  }\n\n  totalPercentChange() {\n    let tenMinNum = this.state.tenMinNums[0];\n    let fiveMinNum = this.state.fiveMinNums[0];\n    let twoMinNum = this.state.twoMinNums[0];\n    let postMinNum = this.state.postNums[0];\n    let addedNumbers = [];\n\n    if (typeof this.state.fifteenMinNums[0] !== undefined) {\n      for (let i = 0; i < this.state.fifteenMinNums.length; i++) {\n        let newFirst;\n        let newSecond;\n        let newThird;\n        let newForth;\n        // PER change from 1st Number\n        let perChange2;\n        let perChange3;\n        let perChange4;\n\n        let fifteenMinNum = this.state.fifteenMinNums[i];\n        if (typeof tenMinNum === \"string\") {\n          let change15To10 = this.percentChangeRow(\n            this.state.tenMinNums[i],\n            fifteenMinNum\n          );\n          newFirst = change15To10 * 0.1;\n        }\n        if (typeof fiveMinNum === \"string\") {\n          let change10To5 = this.percentChangeRow(\n            this.state.fiveMinNums[i],\n            this.state.tenMinNums[i]\n          );\n          newSecond = change10To5 * 0.15;\n          // PER Change w/ 1st Input\n          let change15To5 = this.percentChangeRow(\n            this.state.fiveMinNums[i],\n            fifteenMinNum\n          );\n          perChange2 = change15To5 * 0.15;\n        }\n\n        if (typeof twoMinNum === \"string\") {\n          let change5To2 = this.percentChangeRow(\n            this.state.twoMinNums[i],\n            this.state.fiveMinNums[i]\n          );\n          newThird = change5To2 * 0.3;\n          // PER Change w/ 1st Input\n          let change15To2 = this.percentChangeRow(\n            this.state.twoMinNums[i],\n            fifteenMinNum\n          );\n          perChange3 = change15To2 * 0.3;\n        }\n        if (typeof postMinNum === \"string\") {\n          let change2ToPost = this.percentChangeRow(\n            this.state.postNums[i],\n            this.state.twoMinNums[i]\n          );\n          newForth = change2ToPost * 0.45;\n          // PER Change w/ 1st Input\n          let change15ToPost = this.percentChangeRow(\n            this.state.postNums[i],\n            fifteenMinNum\n          );\n          perChange4 = change15ToPost * 0.45;\n        }\n        let addNews = newFirst + newSecond + newThird + newForth;\n        let avgNews = addNews / 4;\n        let addBrandNews = newFirst + perChange2 + perChange3 + perChange4;\n        let avgBrandNews = addBrandNews / 4;\n        let totalSum = addNews + avgNews + addBrandNews + avgBrandNews;\n        addedNumbers.push(totalSum);\n      }\n      this.rowNumber(\n        this.state.totalHorsesCurrent,\n        this.state.horsesNextRace,\n        addedNumbers\n      );\n    }\n  }\n\n  percentChange(oldNum, newNum) {\n    let minus = oldNum - newNum;\n    let divide = minus / oldNum;\n    let answer = divide * 100;\n    return answer;\n  }\n  percentChangeInc(newNum, oldNum) {\n    let minus = newNum - oldNum;\n    let divide = minus / oldNum;\n    let answer = divide * 100;\n    return answer;\n  }\n\n  percentChangeRow(newNum, oldNum) {\n    let answer = 0;\n    if (parseInt(newNum) < parseInt(oldNum)) {\n      let decrease = this.percentChange(parseInt(oldNum), parseInt(newNum));\n      answer += decrease;\n    } else {\n      let increase = this.percentChangeInc(parseInt(newNum), parseInt(oldNum));\n      answer -= increase;\n    }\n    return answer;\n  }\n\n  rowNumber(currentTotalNum, nextRaceHorses, arr) {\n    let addedRows = {};\n    for (let i = 0; i < arr.length; i++) {\n      let id = i + 1;\n      let numRows = currentTotalNum / nextRaceHorses;\n      let numColumns = currentTotalNum / numRows;\n      let temp = id / numColumns;\n      let curHorse = Math.ceil(temp);\n      if (addedRows[curHorse]) {\n        addedRows[curHorse] = addedRows[curHorse] += arr[i];\n      } else {\n        addedRows[curHorse] = arr[i];\n      }\n    }\n    console.log(addedRows);\n    let answer = Object.values(addedRows);\n    let newArr = answer.map((n) => n / 100);\n    this.setState({ summedTotals: newArr });\n  }\n\n  inputNext(num) {\n    let claass = \"\";\n    for (let i = 0; i < num; i++) {\n      claass += \"auto \";\n    }\n    this.setState({ auto: claass });\n  }\n  inputCurrent(num) {\n    let claass = \"\";\n    for (let i = 0; i < num; i++) {\n      claass += \"auto \";\n    }\n    this.setState({ rowNums: claass });\n  }\n  handleClick() {\n    this.inputNext(this.state.horsesNextRace);\n    this.inputCurrent(this.state.horsesThisRace);\n    this.handleColumnNums();\n    this.handleRowNums();\n    this.fifteenMinHandleSplit(this.state.fifteenMin);\n    this.tenMinHandleSplit(this.state.tenMin);\n    this.fiveMinHandleSplit(this.state.fiveMin);\n    this.twoMinHandleSplit(this.state.twoMin);\n    this.postHandleSplit(this.state.postMin);\n    this.totalPercentChange();\n  }\n\n  handleRaceNumChange(event) {\n    this.setState({ horsesNextRace: event.target.value });\n  }\n  handleCurHorseNum(event) {\n    this.setState({ horsesThisRace: event.target.value });\n  }\n  handleColumnNums() {\n    let arr = [];\n    let num = this.state.horsesNextRace;\n    for (let i = 0; i < num; i++) {\n      arr.push(i + 1);\n    }\n    this.setState({ columns: arr });\n  }\n  handleRowNums() {\n    let arr = [];\n    let num = this.state.horsesThisRace;\n    for (let i = 0; i < num; i++) {\n      arr.push(i + 1);\n    }\n    this.setState({ rows: arr });\n  }\n  // 2 MIN OUT\n  handleNumChange2Min(event) {\n    this.setState({ twoMin: event.target.value });\n  }\n  twoMinHandleSplit(str) {\n    let box1Split = str.split(\"$\");\n    let remove = box1Split.shift();\n    console.log(remove);\n    for (let i = 0; i < box1Split.length; i++) {\n      if (box1Split[i].includes(\",\")) {\n        let numm = box1Split[i].replace(\",\", \" \");\n        numm = numm.replace(/\\s/g, \"\");\n        box1Split[i] = numm;\n      }\n    }\n    this.setState({ twoMinNums: box1Split });\n  }\n  // 5 MIN OUT\n  handleNumChange5Min(event) {\n    this.setState({ fiveMin: event.target.value });\n  }\n  fiveMinHandleSplit(str) {\n    let box1Split = str.split(\"$\");\n    let remove = box1Split.shift();\n    console.log(remove);\n    for (let i = 0; i < box1Split.length; i++) {\n      if (box1Split[i].includes(\",\")) {\n        let numm = box1Split[i].replace(\",\", \" \");\n        numm = numm.replace(/\\s/g, \"\");\n        box1Split[i] = numm;\n      }\n    }\n    this.setState({ fiveMinNums: box1Split });\n  }\n  // 10 MIN OUT\n  handleNumChange10Min(event) {\n    this.setState({ tenMin: event.target.value });\n  }\n  tenMinHandleSplit(str) {\n    let box1Split = str.split(\"$\");\n    let remove = box1Split.shift();\n    console.log(remove);\n    for (let i = 0; i < box1Split.length; i++) {\n      if (box1Split[i].includes(\",\")) {\n        let numm = box1Split[i].replace(\",\", \" \");\n        numm = numm.replace(/\\s/g, \"\");\n        box1Split[i] = numm;\n      }\n    }\n    this.setState({ tenMinNums: box1Split });\n  }\n  // 15 MIN OUT\n  handleNumChange15Min(event) {\n    this.setState({ fifteenMin: event.target.value });\n  }\n  // 15 Handle Split;\n  fifteenMinHandleSplit(str) {\n    let box1Split = str.split(\"$\");\n    let remove = box1Split.shift();\n    console.log(remove);\n    let total = box1Split.length;\n    this.setState({ totalHorsesCurrent: total });\n    //console.log(total);\n    for (let i = 0; i < box1Split.length; i++) {\n      if (box1Split[i].includes(\",\")) {\n        let numm = box1Split[i].replace(\",\", \" \");\n        numm = numm.replace(/\\s/g, \"\");\n        box1Split[i] = numm;\n      }\n    }\n    this.setState({ fifteenMinNums: box1Split });\n  }\n  // POST TIME\n  handleNumChangePost(event) {\n    this.setState({ postMin: event.target.value });\n  }\n  postHandleSplit(str) {\n    let box1Split = str.split(\"$\");\n    let remove = box1Split.shift();\n    console.log(remove);\n    for (let i = 0; i < box1Split.length; i++) {\n      if (box1Split[i].includes(\",\")) {\n        let numm = box1Split[i].replace(\",\", \" \");\n        numm = numm.replace(/\\s/g, \"\");\n        box1Split[i] = numm;\n      }\n    }\n    this.setState({ postNums: box1Split });\n  }\n\n  // DONT ADD CODE BELOW THIS\n  render() {\n    const divStyleColumns = {\n      gridTemplateColumns: this.state.auto,\n    };\n    const divStyleRows = {\n      gridTemplateColumns: this.state.rowNums,\n    };\n\n    return (\n      <div>\n        <h1 className=\"title\">DOUBLES CHART</h1>\n        <label>15 Min</label>\n        <input\n          type=\"text\"\n          id=\"box1\"\n          value={this.state.value}\n          onChange={this.handleNumChange15Min}\n        />\n        <label>10 Min</label>\n        <input\n          type=\"text\"\n          id=\"box1\"\n          value={this.state.value}\n          onChange={this.handleNumChange10Min}\n        />\n        <label>5 Min</label>\n        <input\n          type=\"text\"\n          id=\"box1\"\n          value={this.state.value}\n          onChange={this.handleNumChange5Min}\n        />\n        <label>2 Min</label>\n        <input\n          type=\"text\"\n          id=\"box1\"\n          value={this.state.value}\n          onChange={this.handleNumChange2Min}\n        />\n        <label>POST TIME</label>\n        <input\n          type=\"text\"\n          id=\"box1\"\n          value={this.state.value}\n          onChange={this.handleNumChangePost}\n        />\n\n        <label>Horses in NEXT race</label>\n        <input\n          type=\"number\"\n          value={this.state.value}\n          onChange={this.handleRaceNumChange}\n        />\n        <label>Horses in CURRENT race</label>\n        <input\n          type=\"number\"\n          value={this.state.value}\n          onChange={this.handleCurHorseNum}\n        />\n        <button className=\"btn\" onClick={this.handleClick}>\n          Generate\n        </button>\n\n        <div style={divStyleColumns} className=\"grid-container\">\n          {this.state.columns.map((n, index) => (\n            <h1 className=\"grid-item-num\" key={index}>\n              {n}\n            </h1>\n          ))}\n\n          {this.state.fifteenMinNums.map((n, index) => (\n            <Ball\n              //num={n}\n              totalHorsesCurrent={this.state.totalHorsesCurrent}\n              currentRace={this.state.horsesNextRace}\n              key={index}\n              id={index + 1}\n              fiveMinNum={this.state.fiveMinNums[index]}\n              twoMinNum={this.state.twoMinNums[index]}\n              tenMinNum={this.state.tenMinNums[index]}\n              fifteenMinNum={n}\n              postNum={this.state.postNums[index]}\n            />\n          ))}\n        </div>\n        <h2 className=\"title\">CURRENT RACE TOTALS</h2>\n        <div style={divStyleRows} className=\"sumNum-grid-item-num\">\n          {this.state.rows.map((n, index) => (\n            <h1 className=\"grid-item-num\" key={index}>\n              {n}\n            </h1>\n          ))}\n          {this.state.summedTotals.map((n, index) => (\n            <p\n              className={\"grid-item-num\" + (n > 0 ? \"-HIT\" : \"-NO\")}\n              key={index}\n            >\n              {Math.round(100 * n) / 100}\n            </p>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lottery;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n//import GithubUserInfo from \"./LifeCycleMethods/GithubUserInfo\";\nimport Lottery from \"./LotteryApp/Lottery\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        {/* <GithubUserInfo username=\"JordanMichele\" /> */}\n        <Lottery />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}